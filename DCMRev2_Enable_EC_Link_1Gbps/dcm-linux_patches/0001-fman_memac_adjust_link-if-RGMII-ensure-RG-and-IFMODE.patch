From b9c84bcab0ef134cd6936df01dfa178186efeed6 Mon Sep 17 00:00:00 2001
From: Vladimir Oltean <vladimir.oltean@nxp.com>
Date: Fri, 4 May 2018 19:14:44 +0300
Subject: [PATCH 1/2] fman_memac_adjust_link: if RGMII, ensure RG and IFMODE
 bits are correctly set

* This function is called from the PHY state machine, and adjusts the
  mEMAC register IF_MODE (offset 0x300).
* Normally, the code path will only call adjust_link for link speed and
  duplex changes. Therefore, this function reads out the current IF_MODE
  register, modifies the speed and duplex settings, and writes it back.
* This patch protects against external modifications of the IF_MODE
  register, by ensuring that the interface mode bits (RG and IFMODE)
  correspond to what mode the driver knows the interface should be in.

Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
---
 .../net/ethernet/freescale/sdk_fman/Peripherals/FM/MAC/fman_memac.c  | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/drivers/net/ethernet/freescale/sdk_fman/Peripherals/FM/MAC/fman_memac.c b/drivers/net/ethernet/freescale/sdk_fman/Peripherals/FM/MAC/fman_memac.c
index f31a92a..7c37afe 100644
--- a/drivers/net/ethernet/freescale/sdk_fman/Peripherals/FM/MAC/fman_memac.c
+++ b/drivers/net/ethernet/freescale/sdk_fman/Peripherals/FM/MAC/fman_memac.c
@@ -481,6 +481,11 @@ void fman_memac_adjust_link(struct memac_regs *regs,
         tmp &= ~IF_MODE_RGMII_AUTO;
         tmp &= ~IF_MODE_RGMII_SP_MASK;
 
+        /* Make sure that RG and IFMODE bits (IF_MODE[29:31]) bits
+         * really indicate RGMII. Do not rely on what's being
+         * read out from the mEMAC port. */
+        tmp |= (IF_MODE_RGMII | IF_MODE_GMII);
+
         if (full_dx)
             tmp |= IF_MODE_RGMII_FD;
         else
-- 
2.7.4

